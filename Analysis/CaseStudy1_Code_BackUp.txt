---
title: "CaseStudy1"
author: "Robert Flamenbaum"
date: "March 7, 2017"
output:
  html_document: default
  html_document toc:yes: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
Load downloader, repmis and RCurl
```{r}
library(repmis)
library(RCurl)
library(downloader)
```

First Steps Load CSV Files. Source URL's are 
https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv
https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv

```{r}
download("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile="gdp.csv")
download("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile="educ.csv")
list.files()

# Load gdp data into gdpraw dataframe

gdpraw <-read.csv("gdp.csv", stringsAsFactors = FALSE, header = FALSE)
str(gdpraw)
dim(gdpraw)
head(gdpraw)
tail(gdpraw)
gdpraw

# Clean out missing data in both rows and columns

gdp <- gdpraw[6:195, c("V1","V2","V4","V5")]
head(gdp)

# Rename variables to be more meaningful
# Load dplyr

library(dplyr)
gdp <- rename(gdp, CountryCode=V1, Rank=V2, CountryFullName=V4, Economy=V5)

#Remove commas from Economy Column - These cause problems during Character to numeric conversion
gdp$Economy <- gsub(",", "", gdp$Economy)

#Convert Economy from Character to Numeric data type
gdp$Economy <- as.numeric(gdp$Economy)

#Convert Rank from Character to Numeric data type
gdp$Rank <- as.integer(gdp$Rank)

head(gdp)
gdp


```
Load Education data into a dataframe named educraw

```{r}
educraw <-read.csv("educ.csv", stringsAsFactors = FALSE, header = TRUE)
str(educraw)
educraw

# Drop NA Values Problem - This removes all but 14 rows
#educNoNA <- educraw[complete.cases(educraw),]
#head(educNoNA)


```
Question 1:

Merge the data based on the country shortcode. How many of the IDs match?

First attempt to merge on educNoNA with NA records removed produces only 14 rows.
I decided to keep the NA's in for now to get most of the education data to join with the gdp data.

Answer:Total records returned in the joined data set = 189.

```{r}
# gdp_educ <- merge(gdp, educNoNA)
#head(gdp_educ)
#gdp_educ
#educNoNA

gdp_educraw <- merge(gdp, educraw)
(gdp_educraw)
```

Question 2:
Sort the data frame in ascending order by GDP (so United States is last). What is the 13th
country in the resulting data frame?

Answer: St. Kitts and Nevis

```{r}
order_gdp <-order(gdp_educraw$Economy)
order_gdp

gdp_educraw[order_gdp,]

```

Question 3:
What are the average GDP rankings for the "High income: OECD" and "High income:
nonOECD" groups?

Average Rank of High Income OECD group: 32.9667
Average Rank of High Income nonOECD group: 91.91304

```{r}
HighIncome_OECD <- subset(x=gdp_educraw, Income.Group == 'High income: OECD')
HighIncome_OECD
mean(HighIncome_OECD$Rank)

HighIncome_nonOECD <- subset(x=gdp_educraw, Income.Group == 'High income: nonOECD')
HighIncome_nonOECD
mean(HighIncome_nonOECD$Rank)
```

Question 4:
Plot the GDP for all of the countries. Use ggplot2 to color your plot by Income Group.

```{r}
#Istall and load ggplot2

install.packages("ggplot2")
library("ggplot2")

ggplot(gdp_educraw, aes(x = Rank, y = Economy, colour = Income.Group)) + geom_point() + ggtitle("Gross Domestic Product")+  labs(x="Country Rank",y="GDP")  


```

Question 5:
Cut the GDP ranking into 5 separate quantile groups. Make a table versus Income.Group.
How many countries are Lower middle income but among the 38 nations with highest
GDP?

Answer: 5 Countries are in the lower middle income group and also in the highest ranked GDP.

```{r}
# Sort the data in ascending order on Rank

order_rank <-order(gdp_educraw$Rank)
order_rank
gdp_educraw[order_rank,]

# Cut the data into 5 equal quantile groups

gdp_rank <- cut(gdp_educraw$Rank, 5, include.lowest = TRUE, labels = c("Rank_Highest", "Rank_MedHigh", "Rank_Medium", "Rank_MedLow", "Rank_Lowest"))
gdp_rank

# Append gdp_rank list as a variable called rank_group to gdp_educraw data frame

gdp_educraw$rank_group <- gdp_rank
gdp_educraw

# Create table with variables Income.Group and rank_group

IncomeGroup_RankGroup <- gdp_educraw[, c("Income.Group", "rank_group")]
IncomeGroup_RankGroup

# Convert Income.Group and rank_group to factors for subsetting

IncomeGroup_RankGroup$Income.Group <- as.factor(IncomeGroup_RankGroup$Income.Group)
IncomeGroup_RankGroup

# Subset records where Income.Group is lower middle and rank_group is highest

Low_High <- subset(IncomeGroup_RankGroup, Income.Group == "Lower middle income" & rank_group == "Rank_Highest",select=Income.Group:rank_group)

Low_High

```


```

